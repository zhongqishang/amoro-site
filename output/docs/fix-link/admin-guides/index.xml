<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Admin-Guides on Amoro</title>
    <link>https://amoro.apache.org/docs/fix-link/admin-guides/</link>
    <description>Recent content in Admin-Guides on Amoro</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <atom:link href="https://amoro.apache.org/docs/fix-link/admin-guides/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Deployment</title>
      <link>https://amoro.apache.org/docs/fix-link/deployment/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://amoro.apache.org/docs/fix-link/deployment/</guid>
      <description>Deployment You can choose to download the stable release package from download page, or the source code form Github and compile it according to the README.&#xA;System requirements Java 8 is required. Java 17 is required for Trino. Optional: MySQL 5.5 or higher Optional: PostgreSQL 14.x or higher Optional: ZooKeeper 3.4.x or higher Optional: Hive (2.x or 3.x) Optional: Hadoop (2.9.x or 3.x) Download the distribution All released package can be downloaded from download page.</description>
    </item>
    <item>
      <title>Deployment On Kubernetes</title>
      <link>https://amoro.apache.org/docs/fix-link/deployment-on-kubernetes/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://amoro.apache.org/docs/fix-link/deployment-on-kubernetes/</guid>
      <description>Deploy AMS On Kubernetes Requirements If you want to deploy AMS on Kubernetes, you’d better get a sense of the following things.&#xA;Use AMS official docker image or build AMS docker image An active Kubernetes cluster Kubectl Helm3+ Amoro Official Docker Image You can find the official docker image at Amoro Docker Hub.&#xA;The following are images that can be used in a production environment.&#xA;arctic163/amoro&#xA;This is an image built based on the Amoro binary distribution package for deploying AMS.</description>
    </item>
    <item>
      <title>Managing Catalogs</title>
      <link>https://amoro.apache.org/docs/fix-link/managing-catalogs/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://amoro.apache.org/docs/fix-link/managing-catalogs/</guid>
      <description>Managing Catalogs Users can import your test or online clusters through the catalog management function provided by the AMS Dashboard. Before adding a new Catalog, please read the following guidelines and select the appropriate creation according to your actual needs.&#xA;Create catalog In Amoro, the catalog is a namespace for a group of libraries and tables. Under the catalog, it is further divided into different databases, and under each database, there are different tables.</description>
    </item>
    <item>
      <title>Managing Optimizers</title>
      <link>https://amoro.apache.org/docs/fix-link/managing-optimizers/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://amoro.apache.org/docs/fix-link/managing-optimizers/</guid>
      <description>Managing Optimizers The optimizer is the execution unit for performing self-optimizing tasks on a table. To isolate optimizing tasks on different tables and support the deployment of optimizers in different environments, Amoro has proposed the concepts of optimizer containers and optimizer groups:&#xA;Optimizer container: Encapsulate the deployment method of optimizers, there are three implementations for now: flink container based on Flink streaming job, local container based on Java Application, and external container based on manually started by users.</description>
    </item>
    <item>
      <title>Using Kyuubi By Terminal</title>
      <link>https://amoro.apache.org/docs/fix-link/using-kyuubi/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://amoro.apache.org/docs/fix-link/using-kyuubi/</guid>
      <description>Using Kyuubi By Terminal Prerequisites:&#xA;There must be a running Kyuubi. To deploy and run Kyuubi, please refer to Kyuubi doc Terminal supports interfacing with Kyuubi to submit SQL to Kyuubi for execution. All you need to do is add the Kyuubi configuration as instructed below:&#xA;ams: terminal: backend: kyuubi kyuubi.jdbc.url: jdbc:hive2://127.0.0.1:10009/ # kyuubi Connection Address Without configuring Kyuubi, Terminal executes in memory in AMS.&#xA;To execute SQL in Terminal, you can refer to the following steps:：</description>
    </item>
  </channel>
</rss>
