<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Formats on Amoro</title>
    <link>https://amoro.apache.org/docs/remove-private/formats/</link>
    <description>Recent content in Formats on Amoro</description>
    <generator>Hugo 0.125.0</generator>
    <language>en-us</language>
    <atom:link href="https://amoro.apache.org/docs/remove-private/formats/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Paimon</title>
      <link>https://amoro.apache.org/docs/remove-private/paimon-format/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://amoro.apache.org/docs/remove-private/paimon-format/</guid>
      <description>Paimon Format Paimon format refers to Apache Paimon table. Paimon is a streaming data lake platform with high-speed data ingestion, changelog tracking and efficient real-time analytics.&#xA;By registering Paimon&amp;rsquo;s catalog with Amoro, users can view information such as Schema, Options, Files, Snapshots, DDLs, Compaction information, and more for Paimon tables. Furthermore, they can operate on Paimon tables using Spark SQL in the Terminal. The current supported catalog types and file system types for Paimon are all supported.</description>
    </item>
    <item>
      <title>Iceberg</title>
      <link>https://amoro.apache.org/docs/remove-private/iceberg-format/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://amoro.apache.org/docs/remove-private/iceberg-format/</guid>
      <description>Iceberg Format Iceberg format refers to Apache Iceberg table, which is an open table format for large analytical datasets designed to provide scalable, efficient, and secure data storage and query solutions. It supports data operations on multiple storage backends and provides features such as ACID transactions, multi-version control, and schema evolution, making data management and querying more flexible and convenient.&#xA;With the release of Iceberg v2, Iceberg addresses the shortcomings of row-level updates through the MOR (Merge On Read) mechanism, which better supports streaming updates.</description>
    </item>
    <item>
      <title>Mixed-Hive</title>
      <link>https://amoro.apache.org/docs/remove-private/mixed-hive-format/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://amoro.apache.org/docs/remove-private/mixed-hive-format/</guid>
      <description>Mixed-Hive Format Mixed-Hive format is a format that has better compatibility with Hive than Mixed-Iceberg format. Mixed-Hive format uses a Hive table as the BaseStore and an Iceberg table as the ChangeStore. Mixed-Hive format supports:&#xA;schema, partition, and types consistent with Hive format Using the Hive connector to read and write Mixed-Hive format tables as Hive tables Upgrading a Hive table in-place to a Mixed-Hive format table without data rewriting or migration, with a response time in seconds All the functional features of Mixed-Iceberg format The structure of Mixed-Hive format is shown below:</description>
    </item>
    <item>
      <title>Mixed-Iceberg</title>
      <link>https://amoro.apache.org/docs/remove-private/mixed-iceberg-format/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://amoro.apache.org/docs/remove-private/mixed-iceberg-format/</guid>
      <description>Mixed-Iceberg Format Compared with Iceberg format, Mixed-Iceberg format provides more features:&#xA;Stronger primary key constraints that also apply to Spark OLAP performance that is production-ready for real-time data warehouses through the auto-bucket mechanism LogStore configuration that can reduce data pipeline latency from minutes to milliseconds/seconds Transaction conflict resolution mechanism that enables concurrent writes with the same primary key The design intention of Mixed-Iceberg format is to provide a storage layer for stream-batch integration and offline-real-time unified data warehouses for big data platforms based on data lakes.</description>
    </item>
    <item>
      <title>Overview</title>
      <link>https://amoro.apache.org/docs/remove-private/formats-overview/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://amoro.apache.org/docs/remove-private/formats-overview/</guid>
      <description>Formats Overview Table format (aka. format) was first proposed by Iceberg, which can be described as follows:&#xA;It defines the relationship between tables and files, and any engine can query and retrieve data files according to the table format. New formats such as Iceberg/Delta/Hudi further define the relationship between tables and snapshots, and the relationship between snapshots and files. All write operations on the table will generate new snapshots, and all read operations on the table are based on snapshots.</description>
    </item>
  </channel>
</rss>
